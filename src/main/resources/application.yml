spring:
  application:
    name: trading-platform
  
  datasource:
    url: jdbc:h2:mem:tradingdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: trading-platform-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

trading:
  matching-engine:
    thread-pool-size: 4
    order-timeout-seconds: 30
  
  risk-management:
    max-position-size: 10000
    max-order-value: 1000000
    restricted-symbols:
      - "RESTRICTED1"
      - "RESTRICTED2"
  
  order-book:
    max-price-levels: 100
    tick-size: 0.01

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
